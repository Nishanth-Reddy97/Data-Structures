#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TABLE_SIZE 10

int h[TABLE_SIZE] = {0}; // Initialize all elements to 0

void insert() { 
    int key, index, i, hkey; 
    printf("\nEnter a value to insert into the hash table: "); 
    scanf("%d", &key); 

    hkey = key % TABLE_SIZE; 

    for (i = 0; i < TABLE_SIZE; i++) {      
        index = (hkey + i) % TABLE_SIZE;     
        if (h[index] == 0) { // Check for empty slot (0 represents an empty slot)       
            h[index] = key;         
            printf("No of probes for %d is %d\n", key, i + 1);
            return;     
        }    
    }    

    printf("Element cannot be inserted as the hash table is full.\n");
}

void search() { 
    int key, index, i, hkey;
    printf("\nEnter search element: "); 
    scanf("%d", &key); 

    hkey = key % TABLE_SIZE; 

    for (i = 0; i < TABLE_SIZE; i++) {    
        index = (hkey + i) % TABLE_SIZE; 
        if (h[index] == key) {      
            printf("Value %d is found at index %d\n", key, index);    
            return;   
        } else if (h[index] == 0) { // Terminate search if an empty slot is encountered
            break;
        }
    }  

    printf("Value %d is not found in the hash table.\n", key);
}

void display() {  
    int i;  
    printf("\nElements in the hash table are:\n"); 
    for (i = 0; i < TABLE_SIZE; i++) { 
        if (h[i] != 0) {
            printf("At index %d \t Value = %d\n", i, h[i]);
        } else {
            printf("At index %d \t Value = [EMPTY]\n", i);
        }
    }
}

int main() { 
    int opt; 

    while (1) {        
        printf("\nPress 1. Insert\t2. Display\t3. Search\t4. Exit\n");  
        printf("Enter your option: ");
        scanf("%d", &opt);    

        switch (opt) {           
            case 1:
                insert();                
                break;           
            case 2:
                display();               
                break;           
            case 3:
                search();                
                break;            
            case 4:
                printf("Exiting the program.\n");
                return 0;        
            default:
                printf("Invalid option. Please try again.\n");
        }    
    }
}
